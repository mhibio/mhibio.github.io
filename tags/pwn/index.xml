<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pwn on mhibio</title>
    <link>https://mhibio.github.io/tags/pwn/</link>
    <description>Recent content in pwn on mhibio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 06 May 2021 21:53:09 +0900</lastBuildDate>
    
	<atom:link href="https://mhibio.github.io/tags/pwn/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Defcon-2021-Segnalooo</title>
      <link>https://mhibio.github.io/post/defcon-2021-segnalooo/</link>
      <pubDate>Thu, 06 May 2021 21:53:09 +0900</pubDate>
      
      <guid>https://mhibio.github.io/post/defcon-2021-segnalooo/</guid>
      <description>It&amp;rsquo;s the first problem I solved at Defcon.
and, Because I played the defcon, I messed up the exam.ðŸ˜‚
Solved with Jsec, Epist
Tl;dr Trick on Seccomp Filter&amp;rsquo;s check.
Brute force shellcoding challenge.
Excute execveat(0, &amp;quot;/bin/sh&amp;quot;, 0, 0, 0) after bypass seccomp filter.
Binary Set Signal Handler on Signum 5 ( SIGTRAP ) Allocate Memory twice ( addr1 : 0x10XXXXXXXXXX, addr2 : 0x5XXXXXXXXXXX )
1-1. Input our Shellcode. Munmap all Memory except addr1, addr2 Call Signal Handler with int3 After Signal Handler, IP returns to our Shellcode.</description>
    </item>
    
  </channel>
</rss>